# Generated by Django 3.2.15 on 2023-02-18 12:25

import apps.environment.models.rooms
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AvailableOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='override title for available option')),
                ('classes', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(40)], verbose_name='classes delegated to this subject')),
                ('ebacc', models.CharField(blank=True, choices=[('1', 'Humanities'), ('2', 'Languages'), ('3', 'Sciences'), ('4', 'Vocational'), ('5', 'Not-applicable')], default='5', max_length=5, null=True)),
            ],
            options={
                'verbose_name_plural': 'Available Options',
            },
        ),
        migrations.CreateModel(
            name='AvalilableOptionChoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='preset title')),
            ],
            options={
                'verbose_name_plural': 'Available Option Choices',
            },
        ),
        migrations.CreateModel(
            name='GenerationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='name of settings')),
                ('blocks_must_align', models.BooleanField(default=False)),
                ('max_subjects_per_block', models.PositiveIntegerField(default=12, validators=[django.core.validators.MaxValueValidator(30)])),
                ('blocks', models.PositiveIntegerField(default=4, validators=[django.core.validators.MaxValueValidator(12)], verbose_name='number of option blocks')),
                ('class_size', models.PositiveIntegerField(default=24, validators=[django.core.validators.MaxValueValidator(40)], verbose_name='max class size')),
                ('lesson_cost', models.FloatField(default=5000, verbose_name='cost per lesson')),
            ],
            options={
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('code', models.CharField(default=apps.environment.models.rooms.generate_room_code, max_length=8, primary_key=True, serialize=False, verbose_name='room code')),
                ('domain', models.CharField(max_length=40, verbose_name='domain name')),
                ('title', models.CharField(blank=True, max_length=30, null=True, verbose_name='name of the room')),
                ('slug', models.SlugField(blank=True, max_length=250)),
                ('public', models.BooleanField(default=False, verbose_name='room is public')),
                ('email_domain', models.CharField(blank=True, help_text='student email domain name must match this domain', max_length=50, null=True, verbose_name='email domain match')),
                ('check_email_domain', models.BooleanField(default=False, verbose_name='check email domain')),
            ],
        ),
    ]
