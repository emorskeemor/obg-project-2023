{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.push.js\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.authTokenInterceptor = exports.useAuthTokenInterceptor = exports.applyAuthTokenInterceptor = exports.refreshTokenIfNeeded = exports.getAccessToken = exports.getRefreshToken = exports.clearAuthTokens = exports.setAccessToken = exports.setAuthTokens = exports.isLoggedIn = exports.STORAGE_KEY = void 0;\n\nvar jwt_decode_1 = __importDefault(require(\"jwt-decode\")); // a little time before expiration to try refresh (seconds)\n\n\nvar EXPIRE_FUDGE = 10;\nexports.STORAGE_KEY = \"auth-tokens-\" + process.env.NODE_ENV; // EXPORTS\n\n/**\n * Checks if refresh tokens are stored\n * @returns Whether the user is logged in or not\n */\n\nvar isLoggedIn = function () {\n  var token = exports.getRefreshToken();\n  return !!token;\n};\n\nexports.isLoggedIn = isLoggedIn;\n/**\n * Sets the access and refresh tokens\n * @param {IAuthTokens} tokens - Access and Refresh tokens\n */\n\nvar setAuthTokens = function (tokens) {\n  return localStorage.setItem(exports.STORAGE_KEY, JSON.stringify(tokens));\n};\n\nexports.setAuthTokens = setAuthTokens;\n/**\n * Sets the access token\n * @param {string} token - Access token\n */\n\nvar setAccessToken = function (token) {\n  var tokens = getAuthTokens();\n\n  if (!tokens) {\n    throw new Error('Unable to update access token since there are not tokens currently stored');\n  }\n\n  tokens.accessToken = token;\n  exports.setAuthTokens(tokens);\n};\n\nexports.setAccessToken = setAccessToken;\n/**\n * Clears both tokens\n */\n\nvar clearAuthTokens = function () {\n  return localStorage.removeItem(exports.STORAGE_KEY);\n};\n\nexports.clearAuthTokens = clearAuthTokens;\n/**\n * Returns the stored refresh token\n * @returns {string} Refresh token\n */\n\nvar getRefreshToken = function () {\n  var tokens = getAuthTokens();\n  return tokens ? tokens.refreshToken : undefined;\n};\n\nexports.getRefreshToken = getRefreshToken;\n/**\n * Returns the stored access token\n * @returns {string} Access token\n */\n\nvar getAccessToken = function () {\n  var tokens = getAuthTokens();\n  return tokens ? tokens.accessToken : undefined;\n};\n\nexports.getAccessToken = getAccessToken;\n/**\n * @callback requestRefresh\n * @param {string} refreshToken - Token that is sent to the backend\n * @returns {Promise} Promise that resolves in an access token\n */\n\n/**\n * Gets the current access token, exchanges it with a new one if it's expired and then returns the token.\n * @param {requestRefresh} requestRefresh - Function that is used to get a new access token\n * @returns {string} Access token\n */\n\nvar refreshTokenIfNeeded = function (requestRefresh) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var accessToken;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          accessToken = exports.getAccessToken();\n          if (!(!accessToken || isTokenExpired(accessToken))) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , refreshToken(requestRefresh)];\n\n        case 1:\n          // do refresh\n          accessToken = _a.sent();\n          _a.label = 2;\n\n        case 2:\n          return [2\n          /*return*/\n          , accessToken];\n      }\n    });\n  });\n};\n\nexports.refreshTokenIfNeeded = refreshTokenIfNeeded;\n/**\n *\n * @param {Axios} axios - Axios instance to apply the interceptor to\n * @param {IAuthTokenInterceptorConfig} config - Configuration for the interceptor\n */\n\nvar applyAuthTokenInterceptor = function (axios, config) {\n  if (!axios.interceptors) throw new Error(\"invalid axios instance: \" + axios);\n  axios.interceptors.request.use(exports.authTokenInterceptor(config));\n};\n\nexports.applyAuthTokenInterceptor = applyAuthTokenInterceptor;\n/**\n * @deprecated This method has been renamed to applyAuthTokenInterceptor and will be removed in a future release.\n */\n\nexports.useAuthTokenInterceptor = exports.applyAuthTokenInterceptor; // PRIVATE\n\n/**\n *  Returns the refresh and access tokens\n * @returns {IAuthTokens} Object containing refresh and access tokens\n */\n\nvar getAuthTokens = function () {\n  var rawTokens = localStorage.getItem(exports.STORAGE_KEY);\n  if (!rawTokens) return;\n\n  try {\n    // parse stored tokens JSON\n    return JSON.parse(rawTokens);\n  } catch (error) {\n    if (error instanceof SyntaxError) {\n      error.message = \"Failed to parse auth tokens: \" + rawTokens;\n      throw error;\n    }\n  }\n};\n/**\n * Checks if the token is undefined, has expired or is about the expire\n *\n * @param {string} token - Access token\n * @returns Whether or not the token is undefined, has expired or is about the expire\n */\n\n\nvar isTokenExpired = function (token) {\n  if (!token) return true;\n  var expiresIn = getExpiresIn(token);\n  return !expiresIn || expiresIn <= EXPIRE_FUDGE;\n};\n/**\n * Gets the unix timestamp from an access token\n *\n * @param {string} token - Access token\n * @returns {string} Unix timestamp\n */\n\n\nvar getTimestampFromToken = function (token) {\n  var decoded = jwt_decode_1.default(token);\n  return decoded === null || decoded === void 0 ? void 0 : decoded.exp;\n};\n/**\n * Returns the number of seconds before the access token expires or -1 if it already has\n *\n * @param {string} token - Access token\n * @returns {number} Number of seconds before the access token expires\n */\n\n\nvar getExpiresIn = function (token) {\n  var expiration = getTimestampFromToken(token);\n  if (!expiration) return -1;\n  return expiration - Date.now() / 1000;\n};\n/**\n * Refreshes the access token using the provided function\n *\n * @param {requestRefresh} requestRefresh - Function that is used to get a new access token\n * @returns {string} - Fresh access token\n */\n\n\nvar refreshToken = function (requestRefresh) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var refreshToken, newTokens, error_1, status_1;\n\n    var _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          refreshToken = exports.getRefreshToken();\n          if (!refreshToken) throw new Error('No refresh token available');\n          _b.label = 1;\n\n        case 1:\n          _b.trys.push([1, 7, 8, 9]);\n\n          isRefreshing = true;\n          return [4\n          /*yield*/\n          , requestRefresh(refreshToken)];\n\n        case 2:\n          newTokens = _b.sent();\n          if (!(typeof newTokens === 'object' && (newTokens === null || newTokens === void 0 ? void 0 : newTokens.accessToken))) return [3\n          /*break*/\n          , 4];\n          return [4\n          /*yield*/\n          , exports.setAuthTokens(newTokens)];\n\n        case 3:\n          _b.sent();\n\n          return [2\n          /*return*/\n          , newTokens.accessToken];\n\n        case 4:\n          if (!(typeof newTokens === 'string')) return [3\n          /*break*/\n          , 6];\n          return [4\n          /*yield*/\n          , exports.setAccessToken(newTokens)];\n\n        case 5:\n          _b.sent();\n\n          return [2\n          /*return*/\n          , newTokens];\n\n        case 6:\n          throw new Error('requestRefresh must either return a string or an object with an accessToken');\n\n        case 7:\n          error_1 = _b.sent();\n          status_1 = (_a = error_1 === null || error_1 === void 0 ? void 0 : error_1.response) === null || _a === void 0 ? void 0 : _a.status;\n\n          if (status_1 === 401 || status_1 === 422) {\n            // The refresh token is invalid so remove the stored tokens\n            localStorage.removeItem(exports.STORAGE_KEY);\n            throw new Error(\"Got \" + status_1 + \" on token refresh; clearing both auth tokens\");\n          } else {\n            // A different error, probably network error\n            throw new Error(\"Failed to refresh auth token: \" + error_1.message);\n          }\n\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          isRefreshing = false;\n          return [7\n          /*endfinally*/\n          ];\n\n        case 9:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n/**\n * Function that returns an Axios Intercepter that:\n * - Applies that right auth header to requests\n * - Refreshes the access token when needed\n * - Puts subsequent requests in a queue and executes them in order after the access token has been refreshed.\n *\n * @param {IAuthTokenInterceptorConfig} config - Configuration for the interceptor\n * @returns {Promise} Promise that resolves in the supplied requestConfig\n */\n\n\nvar authTokenInterceptor = function (_a) {\n  var _b = _a.header,\n      header = _b === void 0 ? 'Authorization' : _b,\n      _c = _a.headerPrefix,\n      headerPrefix = _c === void 0 ? 'Bearer ' : _c,\n      requestRefresh = _a.requestRefresh;\n  return function (requestConfig) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var accessToken, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // We need refresh token to do any authenticated requests\n            if (!exports.getRefreshToken()) return [2\n            /*return*/\n            , requestConfig // Queue the request if another refresh request is currently happening\n            ]; // Queue the request if another refresh request is currently happening\n\n            if (isRefreshing) {\n              return [2\n              /*return*/\n              , new Promise(function (resolve, reject) {\n                queue.push({\n                  resolve: resolve,\n                  reject: reject\n                });\n              }).then(function (token) {\n                if (requestConfig.headers) {\n                  requestConfig.headers[header] = \"\" + headerPrefix + token;\n                }\n\n                return requestConfig;\n              }).catch(Promise.reject)];\n            }\n\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , exports.refreshTokenIfNeeded(requestRefresh)];\n\n          case 2:\n            accessToken = _a.sent();\n            resolveQueue(accessToken);\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_2 = _a.sent();\n\n            if (error_2 instanceof Error) {\n              declineQueue(error_2);\n              throw new Error(\"Unable to refresh access token for request due to token refresh error: \" + error_2.message);\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            // add token to headers\n            if (accessToken && requestConfig.headers) requestConfig.headers[header] = \"\" + headerPrefix + accessToken;\n            return [2\n            /*return*/\n            , requestConfig];\n        }\n      });\n    });\n  };\n};\n\nexports.authTokenInterceptor = authTokenInterceptor;\nvar isRefreshing = false;\nvar queue = [];\n/**\n * Function that resolves all items in the queue with the provided token\n * @param token New access token\n */\n\nvar resolveQueue = function (token) {\n  queue.forEach(function (p) {\n    p.resolve(token);\n  });\n  queue = [];\n};\n/**\n * Function that declines all items in the queue with the provided error\n * @param error Error\n */\n\n\nvar declineQueue = function (error) {\n  queue.forEach(function (p) {\n    p.reject(error);\n  });\n  queue = [];\n};","map":{"version":3,"mappings":"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","names":["EXPIRE_FUDGE","exports","process","env","NODE_ENV","isLoggedIn","token","setAuthTokens","tokens","setItem","JSON","stringify","setAccessToken","getAuthTokens","Error","accessToken","clearAuthTokens","removeItem","getRefreshToken","refreshToken","undefined","getAccessToken","refreshTokenIfNeeded","requestRefresh","isTokenExpired","_a","applyAuthTokenInterceptor","axios","config","interceptors","request","use","rawTokens","localStorage","getItem","parse","error","SyntaxError","message","expiresIn","getExpiresIn","getTimestampFromToken","decoded","jwt_decode_1","exp","expiration","Date","now","isRefreshing","newTokens","_b","status_1","response","status","error_1","authTokenInterceptor","header","_c","headerPrefix","requestConfig","Promise","resolve","reject","queue","push","then","headers","catch","resolveQueue","error_2","declineQueue","forEach","p"],"sourceRoot":"","sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}